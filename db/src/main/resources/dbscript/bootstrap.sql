--liquibase formatted sql

--changeset FrankMisa:bootstrap_base_tables (dbms:mysql failOnError:true) endDelimiter:/ rollbackEndDelimiter:/
-- MySQL Script generated by MySQL Workbench
-- 09/28/17 16:29:35
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
/
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
/
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';
/

-- -----------------------------------------------------
-- Schema masterchild
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema masterchild
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `masterchild` DEFAULT CHARACTER SET utf8 ;
/
USE `masterchild` ;
/

-- -----------------------------------------------------
-- Table `masterchild`.`Order`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `masterchild`.`Order` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `customerName` VARCHAR(45) NULL,
  `status` TINYINT(1) NULL DEFAULT 0,
  `orderDate` DATETIME NULL,
  `updated` DATETIME NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;
/

-- -----------------------------------------------------
-- Table `masterchild`.`OrderDetail`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `masterchild`.`OrderDetail` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `orderId` INT NOT NULL,
  `details` VARCHAR(45) NULL,
  `quantity` INT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `orderIdFK`
    FOREIGN KEY (`orderId`)
    REFERENCES `masterchild`.`Order` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;
/

CREATE INDEX `orderIdFK_idx` ON `masterchild`.`OrderDetail` (`orderId` ASC);
/

CREATE TRIGGER `masterchild`.`Order_BEFORE_INSERT` BEFORE INSERT ON `Order` FOR EACH ROW
BEGIN
SET NEW.orderDate = NOW();
SET NEW.updated = NOW();
END
/

CREATE TRIGGER `masterchild`.`Order_BEFORE_UPDATE` BEFORE UPDATE ON `Order` FOR EACH ROW
BEGIN
SET NEW.updated = NOW();
END
/

SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
/
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
/
--rollback drop masterchild.Order;
--rollback drop masterchild.OrderDetail;
--rollback /